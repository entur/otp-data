#!/usr/bin/env bash
set -euo pipefail

MARDUK_URL=https://storage.googleapis.com/marduk
GEOFABRIK_EUROPE_URL=https://download.geofabrik.de/europe
NORWAY_OSM=norway-latest.osm.pbf
ROOT=$(pwd)
TARGET=""
TRANSIT=""
STOPS=""
CONFIG=0
OSM=0
NETEX=0

ENV=production

function main() {
  parseOptions $*

  echo "Norway, fylker"
  echo "  a) Norway"
  echo "  b) Østfold"
  echo "  c) Oslo"
  echo "  d) Oslo & Akershus"
  echo "  e) Innlandet"
  echo "  f) Buskerud"
  echo "  g) Vestfold"
  echo "  h) Telemark"
  echo "  i) Agder"
  echo "  j) Rogaland"
  echo "  k) Vestland"
  echo "  l) Møre og Romsdal"
  echo "  m) Trøndelag"
  echo "  n) Troms"
  echo "  o) Finnmark"
  echo "Special cases"
  echo "  1) Download ${NORWAY_OSM}"
  echo "  2) Railway"
  echo "  3) Flytoget"
  echo ""
  echo "Use <enter> or <any other key> to print help."
  echo ""
  read -p "Select: " -n1 option
  echo ""
  echo ""


  # ARGUMENTS
  #     The two firat argument are requiered. Myltiple files can be listed inside
  #     a string quote. The quotes are optional, if only one file is listed.
  #
  #     <path> "<Transit NeTEx files> ..." ["<Stop NeTEx files> ..."]
  #
  case $option in
    a) setup otp/norway norway ;;
    b) setup otp/fylker/ostfold ost 31_Ostfold ;;
    c) setup otp/fylker/oslo rut 03_Oslo ;;
    d) setup otp/fylker/oslo_akershus rut "03_Oslo 32_Akershus" ;;
    e) setup otp/fylker/innlandet inn 34_Innlandet ;;
    f) setup otp/fylker/buskerud bra 33_Buskerud ;;
    g) setup otp/fylker/vestfold vkt 39_Vestfold ;;
    h) setup otp/fylker/telemark tel 40_Telemark ;;
    i) setup otp/fylker/agder akt 42_Agder ;;
    j) setup otp/fylker/rogaland kol 11_Rogaland ;;
    h) setup otp/fylker/vestland "sky sof" 46_Vestland ;;
    l) setup otp/fylker/more_og_romsdal mor "15_More%20og%20Romsdal" ;;
    m) setup otp/fylker/trondelag atb 50_Trondelag ;;
    o) setup otp/fylker/nordland nor 18_Nordland ;;
    o) setup otp/fylker/troms tro 55_Troms ;;
    p) setup otp/fylker/finnmark fin 56_Finnmark ;;
    1) downloadOsmForNorway ;;
    2) setup otp/cases/railway "goa sjn vgy fly" RailStations ;;
    3) setup otp/cases/flytoget "fly" RailStations ;;
    *) help && exit 1 ;;
  esac
}


function setup() {
  mkdir -p $1
  pushd $1
  NAME="$(basename $(pwd))"

  if [ $OSM == 1 ]; then
    echo ""
    echo "--------------------------------------------------- [ Link or extract OSM file ]"
    setupOsm ${NAME} ${NORWAY_OSM}
  fi
  if [ $NETEX != 0 ]; then
    echo ""
    echo "------------------------------------------------------- [ Download NeTEx files ]"
    downloadNetexFiles $*
  fi
  if [ $CONFIG != 0 ]; then
    echo ""
    echo "------------------------------------------------------ [ Copy OTP config files ]"
    copyConfig
  fi
  # Copy config is config does not exist
  popd
}

function copyConfig() {
  if [ $CONFIG == 1 ]; then
    cp -nv ${ROOT}/config/* .
  elif [ $CONFIG == 2 ]; then
    cp -fv ${ROOT}/config/* .
  fi

  LOCAL_PATH=$(pwd)
  # Escape '/' with '\/'
  LOCAL_PATH="${LOCAL_PATH//\//\\/}"

  # Insert current directory into config files
  echo "Replace {{OTP_SETUP_PATH}} with $(pwd) in all config json files"
  sed -i ".temp" -e "s/{{OTP_SETUP_PATH}}/$LOCAL_PATH/g" *-config.json
  rm *-config.json.temp
  mkdir -p rt
}

function setupOsm() {
  NAME=$1
  SOURCE=${ROOT}/osm/$2

  if [ -f "$1.geojson" ] ; then
    cropOsm $1 $2
  else
    echo "Link:"
    ln -fsv ${SOURCE} $2.osm.pbf
  fi
}

function cropOsm() {
  dir=$1
  target=${dir}.osm.pbf
  source=${ROOT}/osm/$2
  osmium extract --overwrite -v --polygon ${dir}.geojson ${source} -o temp.osm.pbf
  osmium tags-filter temp.osm.pbf w/highway w/public_transport=platform w/railway=platform w/park_ride r/type=restriction --overwrite -o ${target}
  rm -f temp.osm.pbf
}

function downloadOsmForNorway() {
  download osm "${GEOFABRIK_EUROPE_URL}/${NORWAY_OSM}"
}

function downloadNetexFiles() {
  TIAMAT_URL=${MARDUK_URL}-${ENV}/tiamat
  NETEX_URL=${MARDUK_URL}-${ENV}/outbound/netex
  rm -Rf netex

  if [[ $# == 3 ]]; then
	  for stop in $3;	do
		  downloadNetexFile ${stop}_latest.zip $TIAMAT_URL
		  mv netex/tiamat-export-${stop}*.xml netex/_stops_${stop}.xml
	  done
	fi

	for transit in $2; do
		downloadNetexFile rb_${transit}-aggregated-netex.zip $NETEX_URL
	done
}

function downloadNetexFile() {
  echo "Downlowd '$1'"
  wget "${2}/${1}"
  unzip "$1" -d netex
  rm -Rf "$1"
}

# Download $2 into directory $1
function download() {
	  cd $1 && wget --no-check-certificate $2
}

function parseOptions() {
  echo "Parse CLI options: $*"

  if [ $# == 0 ]; then
      CONFIG=1
      OSM=1
      NETEX=1
  else
    while getopts "cfhno" opt; do
      case "$opt" in
        c) CONFIG=1 ;;
        f) CONFIG=2 ;;
        o) OSM=1 ;;
        n) NETEX=1 ;;
        m) NETEX=2 ;;
        h) help && exit 0 ;;
        /?) exit 1 ;;
      esac
    done
  fi
}

function help() {
  echo "
NAME
     ./otp-setup

SYNOPSIS
     ./otp-setup [-c] [-f] [-o] [-n] [-m]
     ./otp-setup [-cfonm]
     '$./otp-setup'  is the same as './otp-setup -con' (Default).

DESCRIPTION
     Setup OTP config, link/extract OSM, and download NeTEx.

     The following options are available:

     -c   Copy in config if the files does NOT alreaddy exist.

     -f   Force copy in config and oerwrite existing files if they exist.

     -o   Link to or extract OSM file. If a geojson file exist in the target directory,
          then use it to extract a new OSM file. If not found, link to the
          osm/${NORWAY_OSM}.
          This is default if no options are set.

     -n   Download NeTEx files from the production (PROD) environment at Entur (default).

     -m   Download NeTEx files from the development (DEV) environment at Entur.

     If no options are set, then the default options '-con' is enabled.

EXAMPLES
     Extract/link osm, download NeTEx, and copy in config if not config exist.

          $ ./otp-setup
          $ ./otp-setup -onc

     Extract/link osm, download NeTEx, and force copy config.

          $ ./otp-setup -onf

     Extract/link osm.

          $ ./otp-setup -o

     Download NeTEx.

          $ ./otp-setup -n

"
}

main $*
